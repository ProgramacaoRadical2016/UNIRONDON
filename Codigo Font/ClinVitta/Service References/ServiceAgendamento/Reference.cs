//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace ClinVitta.ServiceAgendamento {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAgendamento.AgendamentoSoap")]
    public interface AgendamentoSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PARAMETRO_xxx_WEBSERV", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPARAMETRO_xxx_WEBSERV(System.AsyncCallback callback, object asyncState);
        
        ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult EndPARAMETRO_xxx_WEBSERV(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ListaAgendamentoCadastrados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginListaAgendamentoCadastrados(string pNome, System.AsyncCallback callback, object asyncState);
        
        ClinVitta.ServiceAgendamento.ListaTipoAgendamento[] EndListaAgendamentoCadastrados(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Cadastro_Agendamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCadastro_Agendamento(string CODPACIENTE, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, System.AsyncCallback callback, object asyncState);
        
        int EndCadastro_Agendamento(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Alterar_Agendamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginAlterar_Agendamento(string CODPACIENTE, string ID, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, System.AsyncCallback callback, object asyncState);
        
        int EndAlterar_Agendamento(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Deletar_Agendamento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDeletar_Agendamento(string ID, System.AsyncCallback callback, object asyncState);
        
        int EndDeletar_Agendamento(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.Linq.XElement[] anyField;
        
        private System.Xml.Linq.XElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.Linq.XElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.Linq.XElement Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ListaTipoAgendamento : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nOMEField;
        
        private string pROCEDIMENTOField;
        
        private string mEDICOField;
        
        private string dATAField;
        
        private string hORAField;
        
        private string sTATUSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string NOME {
            get {
                return this.nOMEField;
            }
            set {
                this.nOMEField = value;
                this.RaisePropertyChanged("NOME");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string PROCEDIMENTO {
            get {
                return this.pROCEDIMENTOField;
            }
            set {
                this.pROCEDIMENTOField = value;
                this.RaisePropertyChanged("PROCEDIMENTO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MEDICO {
            get {
                return this.mEDICOField;
            }
            set {
                this.mEDICOField = value;
                this.RaisePropertyChanged("MEDICO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DATA {
            get {
                return this.dATAField;
            }
            set {
                this.dATAField = value;
                this.RaisePropertyChanged("DATA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string HORA {
            get {
                return this.hORAField;
            }
            set {
                this.hORAField = value;
                this.RaisePropertyChanged("HORA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string STATUS {
            get {
                return this.sTATUSField;
            }
            set {
                this.sTATUSField = value;
                this.RaisePropertyChanged("STATUS");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AgendamentoSoapChannel : ClinVitta.ServiceAgendamento.AgendamentoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PARAMETRO_xxx_WEBSERVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PARAMETRO_xxx_WEBSERVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListaAgendamentoCadastradosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListaAgendamentoCadastradosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClinVitta.ServiceAgendamento.ListaTipoAgendamento[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ClinVitta.ServiceAgendamento.ListaTipoAgendamento[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Cadastro_AgendamentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Cadastro_AgendamentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Alterar_AgendamentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Alterar_AgendamentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Deletar_AgendamentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Deletar_AgendamentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgendamentoSoapClient : System.ServiceModel.ClientBase<ClinVitta.ServiceAgendamento.AgendamentoSoap>, ClinVitta.ServiceAgendamento.AgendamentoSoap {
        
        private BeginOperationDelegate onBeginPARAMETRO_xxx_WEBSERVDelegate;
        
        private EndOperationDelegate onEndPARAMETRO_xxx_WEBSERVDelegate;
        
        private System.Threading.SendOrPostCallback onPARAMETRO_xxx_WEBSERVCompletedDelegate;
        
        private BeginOperationDelegate onBeginListaAgendamentoCadastradosDelegate;
        
        private EndOperationDelegate onEndListaAgendamentoCadastradosDelegate;
        
        private System.Threading.SendOrPostCallback onListaAgendamentoCadastradosCompletedDelegate;
        
        private BeginOperationDelegate onBeginCadastro_AgendamentoDelegate;
        
        private EndOperationDelegate onEndCadastro_AgendamentoDelegate;
        
        private System.Threading.SendOrPostCallback onCadastro_AgendamentoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAlterar_AgendamentoDelegate;
        
        private EndOperationDelegate onEndAlterar_AgendamentoDelegate;
        
        private System.Threading.SendOrPostCallback onAlterar_AgendamentoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletar_AgendamentoDelegate;
        
        private EndOperationDelegate onEndDeletar_AgendamentoDelegate;
        
        private System.Threading.SendOrPostCallback onDeletar_AgendamentoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AgendamentoSoapClient() {
        }
        
        public AgendamentoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgendamentoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendamentoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgendamentoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<PARAMETRO_xxx_WEBSERVCompletedEventArgs> PARAMETRO_xxx_WEBSERVCompleted;
        
        public event System.EventHandler<ListaAgendamentoCadastradosCompletedEventArgs> ListaAgendamentoCadastradosCompleted;
        
        public event System.EventHandler<Cadastro_AgendamentoCompletedEventArgs> Cadastro_AgendamentoCompleted;
        
        public event System.EventHandler<Alterar_AgendamentoCompletedEventArgs> Alterar_AgendamentoCompleted;
        
        public event System.EventHandler<Deletar_AgendamentoCompletedEventArgs> Deletar_AgendamentoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClinVitta.ServiceAgendamento.AgendamentoSoap.BeginPARAMETRO_xxx_WEBSERV(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPARAMETRO_xxx_WEBSERV(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult ClinVitta.ServiceAgendamento.AgendamentoSoap.EndPARAMETRO_xxx_WEBSERV(System.IAsyncResult result) {
            return base.Channel.EndPARAMETRO_xxx_WEBSERV(result);
        }
        
        private System.IAsyncResult OnBeginPARAMETRO_xxx_WEBSERV(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).BeginPARAMETRO_xxx_WEBSERV(callback, asyncState);
        }
        
        private object[] OnEndPARAMETRO_xxx_WEBSERV(System.IAsyncResult result) {
            ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult retVal = ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).EndPARAMETRO_xxx_WEBSERV(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPARAMETRO_xxx_WEBSERVCompleted(object state) {
            if ((this.PARAMETRO_xxx_WEBSERVCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PARAMETRO_xxx_WEBSERVCompleted(this, new PARAMETRO_xxx_WEBSERVCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PARAMETRO_xxx_WEBSERVAsync() {
            this.PARAMETRO_xxx_WEBSERVAsync(null);
        }
        
        public void PARAMETRO_xxx_WEBSERVAsync(object userState) {
            if ((this.onBeginPARAMETRO_xxx_WEBSERVDelegate == null)) {
                this.onBeginPARAMETRO_xxx_WEBSERVDelegate = new BeginOperationDelegate(this.OnBeginPARAMETRO_xxx_WEBSERV);
            }
            if ((this.onEndPARAMETRO_xxx_WEBSERVDelegate == null)) {
                this.onEndPARAMETRO_xxx_WEBSERVDelegate = new EndOperationDelegate(this.OnEndPARAMETRO_xxx_WEBSERV);
            }
            if ((this.onPARAMETRO_xxx_WEBSERVCompletedDelegate == null)) {
                this.onPARAMETRO_xxx_WEBSERVCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPARAMETRO_xxx_WEBSERVCompleted);
            }
            base.InvokeAsync(this.onBeginPARAMETRO_xxx_WEBSERVDelegate, null, this.onEndPARAMETRO_xxx_WEBSERVDelegate, this.onPARAMETRO_xxx_WEBSERVCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClinVitta.ServiceAgendamento.AgendamentoSoap.BeginListaAgendamentoCadastrados(string pNome, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListaAgendamentoCadastrados(pNome, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClinVitta.ServiceAgendamento.ListaTipoAgendamento[] ClinVitta.ServiceAgendamento.AgendamentoSoap.EndListaAgendamentoCadastrados(System.IAsyncResult result) {
            return base.Channel.EndListaAgendamentoCadastrados(result);
        }
        
        private System.IAsyncResult OnBeginListaAgendamentoCadastrados(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pNome = ((string)(inValues[0]));
            return ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).BeginListaAgendamentoCadastrados(pNome, callback, asyncState);
        }
        
        private object[] OnEndListaAgendamentoCadastrados(System.IAsyncResult result) {
            ClinVitta.ServiceAgendamento.ListaTipoAgendamento[] retVal = ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).EndListaAgendamentoCadastrados(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListaAgendamentoCadastradosCompleted(object state) {
            if ((this.ListaAgendamentoCadastradosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListaAgendamentoCadastradosCompleted(this, new ListaAgendamentoCadastradosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListaAgendamentoCadastradosAsync(string pNome) {
            this.ListaAgendamentoCadastradosAsync(pNome, null);
        }
        
        public void ListaAgendamentoCadastradosAsync(string pNome, object userState) {
            if ((this.onBeginListaAgendamentoCadastradosDelegate == null)) {
                this.onBeginListaAgendamentoCadastradosDelegate = new BeginOperationDelegate(this.OnBeginListaAgendamentoCadastrados);
            }
            if ((this.onEndListaAgendamentoCadastradosDelegate == null)) {
                this.onEndListaAgendamentoCadastradosDelegate = new EndOperationDelegate(this.OnEndListaAgendamentoCadastrados);
            }
            if ((this.onListaAgendamentoCadastradosCompletedDelegate == null)) {
                this.onListaAgendamentoCadastradosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListaAgendamentoCadastradosCompleted);
            }
            base.InvokeAsync(this.onBeginListaAgendamentoCadastradosDelegate, new object[] {
                        pNome}, this.onEndListaAgendamentoCadastradosDelegate, this.onListaAgendamentoCadastradosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClinVitta.ServiceAgendamento.AgendamentoSoap.BeginCadastro_Agendamento(string CODPACIENTE, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCadastro_Agendamento(CODPACIENTE, DATA, HORA, STATUS, PROCEDIMENTO, OBSERVACAO, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int ClinVitta.ServiceAgendamento.AgendamentoSoap.EndCadastro_Agendamento(System.IAsyncResult result) {
            return base.Channel.EndCadastro_Agendamento(result);
        }
        
        private System.IAsyncResult OnBeginCadastro_Agendamento(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CODPACIENTE = ((string)(inValues[0]));
            string DATA = ((string)(inValues[1]));
            string HORA = ((string)(inValues[2]));
            string STATUS = ((string)(inValues[3]));
            string PROCEDIMENTO = ((string)(inValues[4]));
            string OBSERVACAO = ((string)(inValues[5]));
            return ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).BeginCadastro_Agendamento(CODPACIENTE, DATA, HORA, STATUS, PROCEDIMENTO, OBSERVACAO, callback, asyncState);
        }
        
        private object[] OnEndCadastro_Agendamento(System.IAsyncResult result) {
            int retVal = ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).EndCadastro_Agendamento(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCadastro_AgendamentoCompleted(object state) {
            if ((this.Cadastro_AgendamentoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Cadastro_AgendamentoCompleted(this, new Cadastro_AgendamentoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Cadastro_AgendamentoAsync(string CODPACIENTE, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO) {
            this.Cadastro_AgendamentoAsync(CODPACIENTE, DATA, HORA, STATUS, PROCEDIMENTO, OBSERVACAO, null);
        }
        
        public void Cadastro_AgendamentoAsync(string CODPACIENTE, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, object userState) {
            if ((this.onBeginCadastro_AgendamentoDelegate == null)) {
                this.onBeginCadastro_AgendamentoDelegate = new BeginOperationDelegate(this.OnBeginCadastro_Agendamento);
            }
            if ((this.onEndCadastro_AgendamentoDelegate == null)) {
                this.onEndCadastro_AgendamentoDelegate = new EndOperationDelegate(this.OnEndCadastro_Agendamento);
            }
            if ((this.onCadastro_AgendamentoCompletedDelegate == null)) {
                this.onCadastro_AgendamentoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCadastro_AgendamentoCompleted);
            }
            base.InvokeAsync(this.onBeginCadastro_AgendamentoDelegate, new object[] {
                        CODPACIENTE,
                        DATA,
                        HORA,
                        STATUS,
                        PROCEDIMENTO,
                        OBSERVACAO}, this.onEndCadastro_AgendamentoDelegate, this.onCadastro_AgendamentoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClinVitta.ServiceAgendamento.AgendamentoSoap.BeginAlterar_Agendamento(string CODPACIENTE, string ID, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAlterar_Agendamento(CODPACIENTE, ID, DATA, HORA, STATUS, PROCEDIMENTO, OBSERVACAO, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int ClinVitta.ServiceAgendamento.AgendamentoSoap.EndAlterar_Agendamento(System.IAsyncResult result) {
            return base.Channel.EndAlterar_Agendamento(result);
        }
        
        private System.IAsyncResult OnBeginAlterar_Agendamento(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CODPACIENTE = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string DATA = ((string)(inValues[2]));
            string HORA = ((string)(inValues[3]));
            string STATUS = ((string)(inValues[4]));
            string PROCEDIMENTO = ((string)(inValues[5]));
            string OBSERVACAO = ((string)(inValues[6]));
            return ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).BeginAlterar_Agendamento(CODPACIENTE, ID, DATA, HORA, STATUS, PROCEDIMENTO, OBSERVACAO, callback, asyncState);
        }
        
        private object[] OnEndAlterar_Agendamento(System.IAsyncResult result) {
            int retVal = ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).EndAlterar_Agendamento(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAlterar_AgendamentoCompleted(object state) {
            if ((this.Alterar_AgendamentoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Alterar_AgendamentoCompleted(this, new Alterar_AgendamentoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Alterar_AgendamentoAsync(string CODPACIENTE, string ID, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO) {
            this.Alterar_AgendamentoAsync(CODPACIENTE, ID, DATA, HORA, STATUS, PROCEDIMENTO, OBSERVACAO, null);
        }
        
        public void Alterar_AgendamentoAsync(string CODPACIENTE, string ID, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, object userState) {
            if ((this.onBeginAlterar_AgendamentoDelegate == null)) {
                this.onBeginAlterar_AgendamentoDelegate = new BeginOperationDelegate(this.OnBeginAlterar_Agendamento);
            }
            if ((this.onEndAlterar_AgendamentoDelegate == null)) {
                this.onEndAlterar_AgendamentoDelegate = new EndOperationDelegate(this.OnEndAlterar_Agendamento);
            }
            if ((this.onAlterar_AgendamentoCompletedDelegate == null)) {
                this.onAlterar_AgendamentoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAlterar_AgendamentoCompleted);
            }
            base.InvokeAsync(this.onBeginAlterar_AgendamentoDelegate, new object[] {
                        CODPACIENTE,
                        ID,
                        DATA,
                        HORA,
                        STATUS,
                        PROCEDIMENTO,
                        OBSERVACAO}, this.onEndAlterar_AgendamentoDelegate, this.onAlterar_AgendamentoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ClinVitta.ServiceAgendamento.AgendamentoSoap.BeginDeletar_Agendamento(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletar_Agendamento(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int ClinVitta.ServiceAgendamento.AgendamentoSoap.EndDeletar_Agendamento(System.IAsyncResult result) {
            return base.Channel.EndDeletar_Agendamento(result);
        }
        
        private System.IAsyncResult OnBeginDeletar_Agendamento(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).BeginDeletar_Agendamento(ID, callback, asyncState);
        }
        
        private object[] OnEndDeletar_Agendamento(System.IAsyncResult result) {
            int retVal = ((ClinVitta.ServiceAgendamento.AgendamentoSoap)(this)).EndDeletar_Agendamento(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletar_AgendamentoCompleted(object state) {
            if ((this.Deletar_AgendamentoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Deletar_AgendamentoCompleted(this, new Deletar_AgendamentoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Deletar_AgendamentoAsync(string ID) {
            this.Deletar_AgendamentoAsync(ID, null);
        }
        
        public void Deletar_AgendamentoAsync(string ID, object userState) {
            if ((this.onBeginDeletar_AgendamentoDelegate == null)) {
                this.onBeginDeletar_AgendamentoDelegate = new BeginOperationDelegate(this.OnBeginDeletar_Agendamento);
            }
            if ((this.onEndDeletar_AgendamentoDelegate == null)) {
                this.onEndDeletar_AgendamentoDelegate = new EndOperationDelegate(this.OnEndDeletar_Agendamento);
            }
            if ((this.onDeletar_AgendamentoCompletedDelegate == null)) {
                this.onDeletar_AgendamentoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletar_AgendamentoCompleted);
            }
            base.InvokeAsync(this.onBeginDeletar_AgendamentoDelegate, new object[] {
                        ID}, this.onEndDeletar_AgendamentoDelegate, this.onDeletar_AgendamentoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ClinVitta.ServiceAgendamento.AgendamentoSoap CreateChannel() {
            return new AgendamentoSoapClientChannel(this);
        }
        
        private class AgendamentoSoapClientChannel : ChannelBase<ClinVitta.ServiceAgendamento.AgendamentoSoap>, ClinVitta.ServiceAgendamento.AgendamentoSoap {
            
            public AgendamentoSoapClientChannel(System.ServiceModel.ClientBase<ClinVitta.ServiceAgendamento.AgendamentoSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPARAMETRO_xxx_WEBSERV(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("PARAMETRO_xxx_WEBSERV", _args, callback, asyncState);
                return _result;
            }
            
            public ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult EndPARAMETRO_xxx_WEBSERV(System.IAsyncResult result) {
                object[] _args = new object[0];
                ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult _result = ((ClinVitta.ServiceAgendamento.PARAMETRO_xxx_WEBSERVResponsePARAMETRO_xxx_WEBSERVResult)(base.EndInvoke("PARAMETRO_xxx_WEBSERV", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListaAgendamentoCadastrados(string pNome, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pNome;
                System.IAsyncResult _result = base.BeginInvoke("ListaAgendamentoCadastrados", _args, callback, asyncState);
                return _result;
            }
            
            public ClinVitta.ServiceAgendamento.ListaTipoAgendamento[] EndListaAgendamentoCadastrados(System.IAsyncResult result) {
                object[] _args = new object[0];
                ClinVitta.ServiceAgendamento.ListaTipoAgendamento[] _result = ((ClinVitta.ServiceAgendamento.ListaTipoAgendamento[])(base.EndInvoke("ListaAgendamentoCadastrados", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCadastro_Agendamento(string CODPACIENTE, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = CODPACIENTE;
                _args[1] = DATA;
                _args[2] = HORA;
                _args[3] = STATUS;
                _args[4] = PROCEDIMENTO;
                _args[5] = OBSERVACAO;
                System.IAsyncResult _result = base.BeginInvoke("Cadastro_Agendamento", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCadastro_Agendamento(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Cadastro_Agendamento", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAlterar_Agendamento(string CODPACIENTE, string ID, string DATA, string HORA, string STATUS, string PROCEDIMENTO, string OBSERVACAO, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = CODPACIENTE;
                _args[1] = ID;
                _args[2] = DATA;
                _args[3] = HORA;
                _args[4] = STATUS;
                _args[5] = PROCEDIMENTO;
                _args[6] = OBSERVACAO;
                System.IAsyncResult _result = base.BeginInvoke("Alterar_Agendamento", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAlterar_Agendamento(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Alterar_Agendamento", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletar_Agendamento(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("Deletar_Agendamento", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeletar_Agendamento(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Deletar_Agendamento", _args, result)));
                return _result;
            }
        }
    }
}
